{"mappings":"AAAA;AAEA,MAAM,cAAc,SAAS,aAAa,CAAC;AAC3C,MAAM,eAAe,SAAS,aAAa,CAAC;AAC5C,MAAM,cAAc,SAAS,aAAa,CAAC;AAC3C,MAAM,aAAa,SAAS,aAAa,CAAC;AAC1C,MAAM,YAAY,SAAS,aAAa,CAAC;AACzC,MAAM,YAAY,SAAS,aAAa,CAAC;AACzC,IAAI,QAAQ;AACZ,MAAM,OAAO;AACb,MAAM,UAAU;AAChB,MAAM,QAAQ;IACZ;QAAC;QAAG;QAAG;QAAG;KAAE;IACZ;QAAC;QAAG;QAAG;QAAG;KAAE;IACZ;QAAC;QAAG;QAAG;QAAG;KAAE;IACZ;QAAC;QAAG;QAAG;QAAG;KAAE;CACb;AAED,SAAS;IACP,IAAI,CAAC,gBACH;IAGF,MAAM,IAAI,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;IACrC,MAAM,IAAI,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;IAErC,IAAI,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,GAAG;QACrB,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG,KAAK,MAAM,KAAK,MAAM,IAAI;QACxC;IACF,OACE;AAEJ;AAEA,SAAS;IACP,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,IACxB,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,IAAK;QAChC,IAAI,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,GAClB,OAAO;IAEX;IAGF,OAAO;AACT;AAEA,SAAS;IACP,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,IAAK;QAC7B,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,IAC3B,IAAI,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,MAClB,WAAW,SAAS,CAAC,MAAM,CAAC;IAGlC;AACF;AAEA,SAAS;IACP,IAAI,gBACF;IAGF,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,GAAG,IAC5B,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,GAAG,IAAK;QACpC,IAAI,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,EACpE;IAEJ;IAGF,YAAY,SAAS,CAAC,MAAM,CAAC;AAC/B;AAEA,SAAS,WAAW,KAAK;IACvB,OAAO,MAAM,OAAO,CAAC,CAAA,KAAM,GAAG,MAAM,CAAC,GAAG,SAAS,GAAG,GAAG,GAAG;AAC5D;AAEA,YAAY,gBAAgB,CAAC,SAAS;IACpC,YAAY,SAAS,CAAC,MAAM,CAAC;IAC7B,YAAY,SAAS,CAAC,GAAG,CAAC;IAC1B,YAAY,WAAW,GAAG;IAC1B,aAAa,SAAS,CAAC,GAAG,CAAC;IAC3B,YAAY,SAAS,CAAC,GAAG,CAAC;IAC1B,WAAW,SAAS,CAAC,GAAG,CAAC;IACzB,QAAQ;IACR,UAAU,WAAW,GAAG;IAExB,WAAW;IAEX;IACA;AACF;AAEA,SAAS;IACP,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,IACxB,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,IAAK;QAChC,MAAM,OAAO,UAAU,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE;QAC9C,MAAM,MAAM,KAAK,CAAC,EAAE,CAAC,EAAE;QAEvB,KAAK,WAAW,GAAG;QACnB,KAAK,SAAS,CAAC,KAAK,GAAG;QACvB,KAAK,SAAS,CAAC,GAAG,CAAC;QAEnB,IAAI,MAAM,GAAG;YACX,KAAK,SAAS,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC;YACvC,KAAK,WAAW,GAAG;QACrB;IACF;AAEJ;AAEA,SAAS,gBAAgB,CAAC,WAAW,CAAA;IACnC,OAAQ,GAAG,GAAG;QACZ,KAAK;YACH;YACA;QAEF,KAAK;YACH;YACA;QAEF,KAAK;YACH;YACA;QAEF,KAAK;YACH;YACA;IACJ;IAEA,UAAU,WAAW,GAAG;IAExB;IACA;IACA;AACF;AAEA,SAAS,MAAM,GAAG;IAChB,IAAI,SAAS,IAAI,MAAM,CAAC,CAAA,KAAM,OAAO;IAErC,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,GAAG,GAAG,IACrC,IAAI,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,IAAI,EAAE,EAAE;QAC/B,MAAM,CAAC,EAAE,IAAI;QACb,MAAM,CAAC,IAAI,EAAE,GAAG;QAChB,SAAS,MAAM,CAAC,EAAE;IACpB;IAGF,SAAS,OAAO,MAAM,CAAC,CAAA,KAAM,OAAO;IAEpC,MAAO,OAAO,MAAM,GAAG,KACrB,OAAO,IAAI,CAAC;IAGd,OAAO;AACT;AAEA,SAAS;IACP,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,IAAK;QAC7B,MAAM,MAAM,KAAK,CAAC,EAAE;QAEpB,MAAM,SAAS,MAAM;QAErB,KAAK,CAAC,EAAE,GAAG;QAEX;IACF;AACF;AAEA,SAAS;IACP,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,IAAK;QAC7B,MAAM,MAAM,KAAK,CAAC,EAAE;QAEpB,MAAM,SAAS,MAAM;eAAI;SAAI,CAAC,OAAO;QAErC,KAAK,CAAC,EAAE,GAAG,OAAO,OAAO;QAEzB;IACF;AACF;AAEA,SAAS;IACP,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,IAAK;QAChC,MAAM,MAAM;YAAC,KAAK,CAAC,EAAE,CAAC,EAAE;YAAE,KAAK,CAAC,EAAE,CAAC,EAAE;YAAE,KAAK,CAAC,EAAE,CAAC,EAAE;YAAE,KAAK,CAAC,EAAE,CAAC,EAAE;SAAC;QAEhE,MAAM,SAAS,MAAM;QAErB,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE;QACvB,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE;QACvB,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE;QACvB,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE;QAEvB;IACF;AACF;AAEA,SAAS;IACP,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,IAAK;QAChC,MAAM,MAAM;YAAC,KAAK,CAAC,EAAE,CAAC,EAAE;YAAE,KAAK,CAAC,EAAE,CAAC,EAAE;YAAE,KAAK,CAAC,EAAE,CAAC,EAAE;YAAE,KAAK,CAAC,EAAE,CAAC,EAAE;SAAC;QAEhE,MAAM,SAAS,MAAM;eAAI;SAAI,CAAC,OAAO;QAErC,OAAO,OAAO;QAEd,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE;QACvB,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE;QACvB,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE;QACvB,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE;QAEvB;IACF;AACF","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst startButton = document.querySelector('.start');\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst gameScore = document.querySelector('.game-score');\nconst gameField = document.querySelector('tbody');\nlet score = 0;\nconst rows = 4;\nconst columns = 4;\nconst board = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nfunction getRandomCell() {\n  if (!hasEmptyCell()) {\n    return;\n  }\n\n  const r = Math.floor(Math.random() * rows);\n  const c = Math.floor(Math.random() * columns);\n\n  if (board[r][c] === 0) {\n    board[r][c] = Math.random() < 0.9 ? 2 : 4;\n    updateGame();\n  } else {\n    getRandomCell();\n  }\n}\n\nfunction hasEmptyCell() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction winGame() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 2048) {\n        messageWin.classList.remove('hidden');\n      }\n    }\n  }\n}\n\nfunction loseGame() {\n  if (hasEmptyCell()) {\n    return;\n  }\n\n  for (let r = 0; r < rows - 1; r++) {\n    for (let c = 0; c < columns - 1; c++) {\n      if (board[r][c] === board[r][c + 1] || board[r][c] === board[r + 1][c]) {\n        return;\n      }\n    }\n  }\n\n  messageLose.classList.remove('hidden');\n}\n\nfunction resetBoard(table) {\n  return table.forEach(el => el.splice(0, columns, 0, 0, 0, 0));\n}\n\nstartButton.addEventListener('click', () => {\n  startButton.classList.remove('start');\n  startButton.classList.add('restart');\n  startButton.textContent = 'Restart';\n  messageStart.classList.add('hidden');\n  messageLose.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  score = 0;\n  gameScore.textContent = score;\n\n  resetBoard(board);\n\n  getRandomCell();\n  getRandomCell();\n});\n\nfunction updateGame() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const cell = gameField.children[r].children[c];\n      const num = board[r][c];\n\n      cell.textContent = '';\n      cell.classList.value = '';\n      cell.classList.add('field-cell');\n\n      if (num > 0) {\n        cell.classList.add(`field-cell--${num}`);\n        cell.textContent = num;\n      }\n    }\n  }\n}\n\ndocument.addEventListener('keydown', ev => {\n  switch (ev.key) {\n    case 'ArrowLeft':\n      moveLeft();\n      break;\n\n    case 'ArrowRight':\n      moveRight();\n      break;\n\n    case 'ArrowUp':\n      moveUp();\n      break;\n\n    case 'ArrowDown':\n      moveDown();\n      break;\n  }\n\n  gameScore.textContent = score;\n\n  loseGame();\n  winGame();\n  getRandomCell();\n});\n\nfunction slide(row) {\n  let newRow = row.filter(el => el !== 0);\n\n  for (let i = 0; i < newRow.length - 1; i++) {\n    if (newRow[i] === newRow[i + 1]) {\n      newRow[i] *= 2;\n      newRow[i + 1] = 0;\n      score += newRow[i];\n    }\n  }\n\n  newRow = newRow.filter(el => el !== 0);\n\n  while (newRow.length < rows) {\n    newRow.push(0);\n  }\n\n  return newRow;\n}\n\nfunction moveLeft() {\n  for (let r = 0; r < rows; r++) {\n    const row = board[r];\n\n    const newRow = slide(row);\n\n    board[r] = newRow;\n\n    updateGame();\n  }\n}\n\nfunction moveRight() {\n  for (let r = 0; r < rows; r++) {\n    const row = board[r];\n\n    const newRow = slide([...row].reverse());\n\n    board[r] = newRow.reverse();\n\n    updateGame();\n  }\n}\n\nfunction moveUp() {\n  for (let c = 0; c < columns; c++) {\n    const row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    const newRow = slide(row);\n\n    board[0][c] = newRow[0];\n    board[1][c] = newRow[1];\n    board[2][c] = newRow[2];\n    board[3][c] = newRow[3];\n\n    updateGame();\n  }\n}\n\nfunction moveDown() {\n  for (let c = 0; c < columns; c++) {\n    const row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    const newRow = slide([...row].reverse());\n\n    newRow.reverse();\n\n    board[0][c] = newRow[0];\n    board[1][c] = newRow[1];\n    board[2][c] = newRow[2];\n    board[3][c] = newRow[3];\n\n    updateGame();\n  }\n}\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}